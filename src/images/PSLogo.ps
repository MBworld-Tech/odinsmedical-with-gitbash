%!PS-Adobe-3.0
%%Creator: cairo 1.15.12 (http://cairographics.org)
%%CreationDate: Thu Sep 12 15:15:22 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 170x103mm 481 291 0 () ()
%%BoundingBox: 112 92 381 198
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 170x103mm
%%PageBoundingBox: 112 92 381 198
481 291 cairo_set_page_size
%%EndPageSetup
q 112 92 269 106 rectclip
1 0 0 -1 0 291 cm q
0.992157 0.0196078 0.0196078 rg
218.102 146 m 218.066 153.301 216.684 160.117 213.949 166.449 c 211.25 
172.816 207.5 178.398 202.699 183.199 c 197.898 188 192.316 191.75 185.949
 194.449 c 179.617 197.184 172.801 198.566 165.5 198.602 c 158.199 198.566
 151.383 197.184 145.051 194.449 c 138.684 191.75 133.102 188 128.301 183.199
 c 123.5 178.398 119.75 172.816 117.051 166.449 c 114.316 160.117 112.934
 153.301 112.898 146 c 112.934 138.699 114.316 131.883 117.051 125.551 c
 119.75 119.184 123.5 113.602 128.301 108.801 c 133.102 104 138.684 100.25
 145.051 97.551 c 151.383 94.816 158.199 93.434 165.5 93.398 c 172.801 93.434
 179.617 94.816 185.949 97.551 c 192.316 100.25 197.898 104 202.699 108.801
 c 207.5 113.602 211.25 119.184 213.949 125.551 c 216.684 131.883 218.066
 138.699 218.102 146 c f*
1 g
145.949 147.699 m 157.949 147.699 l 160.773 145.301 l 163.727 128.5 l 151.727
 128.5 l 148.898 130.898 l h
161.898 152.5 m 135.5 152.5 l 139.301 130.898 l 147.773 123.699 l 174.176
 123.699 l 170.375 145.301 l h
161.898 152.5 m f*
0 g
167.449 166.699 m 179.449 166.699 l 182.273 164.301 l 185.227 147.5 l 170.824
 147.5 l h
183.398 171.5 m 157 171.5 l 162.074 142.699 l 195.676 142.699 l 191.875
 164.301 l h
183.398 171.5 m f*
0.988235 0.00784314 0.0235294 rg
249.109 157.984 m 251.766 155.734 l 254.531 139.938 l 243.25 139.938 l 
240.594 142.203 l 237.828 157.984 l h
228 162.5 m 231.578 142.203 l 239.531 135.422 l 264.359 135.422 l 260.781
 155.734 l 252.812 162.5 l h
283.715 157.984 m 286.371 155.734 l 289.137 139.938 l 275.605 139.938 l
 272.434 157.984 l h
262.605 162.5 m 267.371 135.422 l 298.965 135.422 l 295.387 155.734 l 287.418
 162.5 l h
262.605 162.5 m f
297.215 162.5 m 301.98 135.422 l 311.012 135.422 l 306.246 162.5 l h
297.215 162.5 m f
309.238 162.5 m 314.004 135.422 l 338.832 135.422 l 344.395 142.203 l 340.816
 162.5 l 331.801 162.5 l 335.363 142.203 l 333.52 139.938 l 322.238 139.938
 l 318.27 162.5 l h
309.238 162.5 m f
343.848 162.5 m 344.645 157.984 l 364.957 157.984 l 367.613 155.734 l 368.004
 153.469 l 345.441 153.469 l 347.426 142.203 l 355.379 135.422 l 380.207
 135.422 l 378.598 144.453 l 369.582 144.453 l 370.379 139.938 l 359.098
 139.938 l 356.441 142.203 l 355.27 148.969 l 377.832 148.969 l 376.629 
155.734 l 368.66 162.5 l h
343.848 162.5 m f
Q Q
showpage
%%Trailer
%%EOF
